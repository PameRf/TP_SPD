TP2_Cerradura
Funcionamiento 
Al momento de encender el dispositivo, deberá mostrar el mensaje “Password:”, habilitando al usuario a que ingrese una combinación de 6 teclas. Al presionar 6 teclas, se deberá validar que las mismas coincidan con la contraseña configurada (por defecto, ’2C2022’). Si la contraseña es correcta, El led verde debera parpadear 5 segundos y mostrar en pantalla el mensaje ‘Password OK’, pasado dicho tiempo se debera apagar. En caso de ser incorrecta, deberá parpadear el led rojo mostrando por pantalla ‘Password Fail’ durante el mismo tiempo que el verde. (Detallado más abajo)
Presionando el botón “Configuration”, se deberá entrar en un modo de “configuración”. Dentro de dicho modo, el usuario deberá ingresar una nueva password la cual será tomada como default. Luego de ingresar 6 teclas, dicha combinación se guardará como el password y el dispositivo volverá a funcionar en el modo que permite ingresar el código.

a)El teclado debe utilizarse para ingresar un password. El password se debe mostrar en pantalla a medida que se va ingresando. Se debe mostrar en la línea superior de la pantalla.
b)Como fue mencionado, El password por defecto debe ser '1C2022'
c)Si se ingresan 6 caracteres, automáticamente se debe validar si el password ingresado es el correcto.
d)El botón etiquetado como "RESET" debe reiniciar los caracteres ingresados. dejando solo el mensaje ‘Password:’ en el display.
e)El botón etiquetado como "TEST PASSWORD" debe validar si el password ingresado es correcto o no, sin importar si se ingresaron los 6 caracteres.
f)Si el password es correcto debe mostrarse el mensaje "PASSWORD OK", caso contrario se mostrará "PASSWORD FAIL"

tinkercad:
https://www.tinkercad.com/things/bxRBzV8kP87-tp2/editel?sharecode=478TcPuLGBM1PrzSwnnmEHeMlNt-cfyR2C2xo_f49a8

// C++ code
//
// C++ code
//


#include <stdio.h>
#include <string.h>
#include <Keypad.h>
#include <LiquidCrystal.h>



#define SIZE 4
#define LED_VERDE 9
#define LED_ROJO 10
#define DELAY 18

#define BOTON_TEST_PSW 11
#define BOTON_RESET 12
#define BOTON_CONFIG A4

//void cambioClave();
LiquidCrystal monitor(8,13,A0,A1,A2,A3);



const byte FILAS= SIZE;
const byte COLUMNAS=SIZE;
char caracteres[SIZE][SIZE]={
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'},
};
				
byte pinesFilas[SIZE]={7,6,5,4};
				
byte pinesColumnas[SIZE]={3,2,1,0};
				
Keypad miTeclado= Keypad (makeKeymap(caracteres), 
                 pinesFilas, pinesColumnas, FILAS, COLUMNAS);
void setup()
{
  monitor.begin(16,2);
  pinMode(LED_VERDE,OUTPUT);
  pinMode(LED_ROJO,OUTPUT);
  
  pinMode(BOTON_RESET, INPUT);
  pinMode(BOTON_TEST_PSW, INPUT);
  pinMode(BOTON_CONFIG, INPUT);
 
  monitor.setCursor(0,0);
  
  monitor.print("Password: ");
   
}
char clave[7]={'2','C','2','0','2','2','\0'};

int posicion=0; 
char digitos[7];
int tiempo_leds;
int led_time;
int botonResetAntes=0;
int botonTestAntes=0;
int botonConfigAntes=0;
int flag=0;
int contadorDigitos;
int estado=0;
char buffer[7];
int indice=0;

void loop()
{
  int segundos=millis()/1000;
 
  
  int botonResetAhora = digitalRead(BOTON_RESET);
  int botonTestAhora= digitalRead(BOTON_TEST_PSW);
  int botonConfigAhora= digitalRead(BOTON_CONFIG);
  
  if(estado==0){
  char boton= miTeclado.getKey();
     
  
    if(boton != NO_KEY || flag== 1){
         
        monitor.setCursor(posicion,1);
        monitor.print(boton);
       	digitos[posicion]=boton;
        posicion++;
        contadorDigitos++;   
     
        
      }
  }
if((posicion >=6 || botonTestAhora == 1) && estado != 1){
    
   botonTestAhora= 0;
    
    if (strcmp(digitos,clave)==0){
      monitor.setCursor(0,0);
      monitor.print("Password OK");
      digitalWrite(LED_VERDE,HIGH);
      //estado=1;
   
    }
    if (strcmp(digitos,clave)!=0){
      
      monitor.setCursor(0,0);
      monitor.print("Password FAIL");
      digitalWrite(LED_ROJO,HIGH);
              
    }
 
   botonTestAntes=botonTestAhora;
  // botonResetAntes= botonResetAhora;
   //botonConfigAntes= botonConfigAhora;
     
  }
    if(segundos - tiempo_leds >= DELAY){
      
      	digitalWrite(LED_VERDE,LOW);
         digitalWrite(LED_ROJO,LOW);    
          
      }
  if(botonResetAhora == 1 ){
        
   	 monitor.clear();
          
     posicion= posicion -contadorDigitos;
   
    flag=1;
  }
   botonResetAntes= botonResetAhora; 
  
  if(botonConfigAhora ==1 || estado==1 ){
      
    
  monitor.setCursor(0,0);
  monitor.print("Nueva clave");
  
  estado=1;
    
   if(estado==1){
	 char tecla= miTeclado.getKey();
     
		if(tecla != NO_KEY && indice <7){
      
        monitor.setCursor(indice,1);
        monitor.print(tecla);
       	buffer[indice]=tecla;
        indice++;
     
 
     //tiempo=millis()/1000;     
	}     

  }
      if(indice == 6){
        
        strcpy(clave, buffer);
        monitor.setCursor(0,0);
        monitor.print("Clave cambiada");
        monitor.setCursor(0,1);
        monitor.print("       ");
        estado=0;
        flag=3; 
       
    }
    if (flag==3){
       monitor.setCursor(0,0);
       monitor.print("Password");
    }
    
  }
   botonConfigAntes= botonConfigAhora;
  
   delay(25);    
}
  